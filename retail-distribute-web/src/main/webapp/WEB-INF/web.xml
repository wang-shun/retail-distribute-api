<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">

	<display-name>Archetype Created Web Application</display-name>
	<context-param>
		<param-name>webAppRootKey</param-name>
		<param-value>logistics-platform-api</param-value>
	</context-param>

	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>classpath:log4j.properties</param-value>
	</context-param>
 	
 	<!-- diamond配置start -->
	<!--生成配置文件的Windows系统目录 -->
	<context-param>
		<param-name>diamondConfigLocationForWindow</param-name>
		<param-value>D:/wonhighconf/retail/distribute</param-value>
	</context-param>
	<!--生成配置文件的unix系统目录 -->
	<context-param>
		<param-name>diamondConfigLocationForUnix</param-name>
		<param-value>${DISTRIBUTE_WEB_CONF}</param-value>
	</context-param> 
	<!--diamond服务器上建的groupId,一般用工程的名称 -->
	<context-param>
		<param-name>diamondGroupName</param-name>
		<param-value>${DISTRIBUTE_DIAMOND_GROUP_ID}</param-value>
	</context-param>
	<!--配置文件列表，如果本地没有，将从远程加载回这些配置文件在本地生成配置文件目录后生成 -->
	<context-param>
		<param-name>diamondConfigFiles</param-name>
		<param-value>dal-db-config,config,dubbo-service,dal-redis-config</param-value>
	</context-param>
	<!--选配，发现服务器配置更新，实时触发的后继处理类	-->
	<!-- 暂不处理 -->
	<!--选配，轮询检测配置是否变更，默认为true -->
	<context-param>
		<param-name>diamondUseRealTimeNotification</param-name>
		<param-value>false</param-value>
	</context-param>
	<context-param>
		<param-name>diamondAutoCreateDicectory</param-name>
		<param-value>true</param-value>
	</context-param>
	<!--添加在所有listener之前 -->
	<!--<listener>
		<listener-class>com.yougou.logistics.base.web.listener.DiamondLoaderListener</listener-class>
	</listener>-->
	<!-- diamond配置end -->
 	
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping> 

	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>
	<listener>
		<listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
	</listener>


	<!-- Processes application requests -->
	<servlet>
		<servlet-name>appServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>WEB-INF/classes/META-INF/spring-distribute-web.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>appServlet</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>appServlet</servlet-name>
		<url-pattern>*.json</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.css</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.gif</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.jpg</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.png</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.js</url-pattern>
	</servlet-mapping>

	<welcome-file-list>
		<welcome-file>login</welcome-file>
	</welcome-file-list>
</web-app>
